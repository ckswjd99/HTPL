Grammar

    0 $accept: assembly $end

    1 assembly: line_list

    2 line_list: line line_list
    3          | %empty

    4 line: instruction NEW_LINE

    5 instruction: OP_ERROR
    6            | OP_BUFFER OPERAND
    7            | OP_TAG OPERAND
    8            | OP_OPEN OPERAND
    9            | OP_CLOSE OPERAND
   10            | OP_POP OPERAND OPERAND
   11            | OP_PUSH OPERAND OPERAND
   12            | OP_DUPL OPERAND OPERAND
   13            | OP_STASH OPERAND OPERAND
   14            | OP_ADD OPERAND OPERAND
   15            | OP_JUMP OPERAND OPERAND
   16            | OP_BREAK
   17            | OP_PRINT OPERAND
   18            | OP_SCAN OPERAND
   19            | OP_EXIT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    OP_ERROR <opcode> (258) 5
    OP_BUFFER <opcode> (259) 6
    OP_TAG <opcode> (260) 7
    OP_OPEN <opcode> (261) 8
    OP_CLOSE <opcode> (262) 9
    OP_POP <opcode> (263) 10
    OP_PUSH <opcode> (264) 11
    OP_DUPL <opcode> (265) 12
    OP_STASH <opcode> (266) 13
    OP_ADD <opcode> (267) 14
    OP_JUMP <opcode> (268) 15
    OP_BREAK <opcode> (269) 16
    OP_PRINT <opcode> (270) 17
    OP_SCAN <opcode> (271) 18
    OP_EXIT <opcode> (272) 19
    OPERAND <number> (273) 6 7 8 9 10 11 12 13 14 15 17 18
    NEW_LINE <number> (274) 4


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    assembly (21)
        on left: 1
        on right: 0
    line_list (22)
        on left: 2 3
        on right: 1 2
    line (23)
        on left: 4
        on right: 2
    instruction <instPtr> (24)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
        on right: 4


State 0

    0 $accept: . assembly $end

    OP_ERROR   shift, and go to state 1
    OP_BUFFER  shift, and go to state 2
    OP_TAG     shift, and go to state 3
    OP_OPEN    shift, and go to state 4
    OP_CLOSE   shift, and go to state 5
    OP_POP     shift, and go to state 6
    OP_PUSH    shift, and go to state 7
    OP_DUPL    shift, and go to state 8
    OP_STASH   shift, and go to state 9
    OP_ADD     shift, and go to state 10
    OP_JUMP    shift, and go to state 11
    OP_BREAK   shift, and go to state 12
    OP_PRINT   shift, and go to state 13
    OP_SCAN    shift, and go to state 14
    OP_EXIT    shift, and go to state 15

    $default  reduce using rule 3 (line_list)

    assembly     go to state 16
    line_list    go to state 17
    line         go to state 18
    instruction  go to state 19


State 1

    5 instruction: OP_ERROR .

    $default  reduce using rule 5 (instruction)


State 2

    6 instruction: OP_BUFFER . OPERAND

    OPERAND  shift, and go to state 20


State 3

    7 instruction: OP_TAG . OPERAND

    OPERAND  shift, and go to state 21


State 4

    8 instruction: OP_OPEN . OPERAND

    OPERAND  shift, and go to state 22


State 5

    9 instruction: OP_CLOSE . OPERAND

    OPERAND  shift, and go to state 23


State 6

   10 instruction: OP_POP . OPERAND OPERAND

    OPERAND  shift, and go to state 24


State 7

   11 instruction: OP_PUSH . OPERAND OPERAND

    OPERAND  shift, and go to state 25


State 8

   12 instruction: OP_DUPL . OPERAND OPERAND

    OPERAND  shift, and go to state 26


State 9

   13 instruction: OP_STASH . OPERAND OPERAND

    OPERAND  shift, and go to state 27


State 10

   14 instruction: OP_ADD . OPERAND OPERAND

    OPERAND  shift, and go to state 28


State 11

   15 instruction: OP_JUMP . OPERAND OPERAND

    OPERAND  shift, and go to state 29


State 12

   16 instruction: OP_BREAK .

    $default  reduce using rule 16 (instruction)


State 13

   17 instruction: OP_PRINT . OPERAND

    OPERAND  shift, and go to state 30


State 14

   18 instruction: OP_SCAN . OPERAND

    OPERAND  shift, and go to state 31


State 15

   19 instruction: OP_EXIT .

    $default  reduce using rule 19 (instruction)


State 16

    0 $accept: assembly . $end

    $end  shift, and go to state 32


State 17

    1 assembly: line_list .

    $default  reduce using rule 1 (assembly)


State 18

    2 line_list: line . line_list

    OP_ERROR   shift, and go to state 1
    OP_BUFFER  shift, and go to state 2
    OP_TAG     shift, and go to state 3
    OP_OPEN    shift, and go to state 4
    OP_CLOSE   shift, and go to state 5
    OP_POP     shift, and go to state 6
    OP_PUSH    shift, and go to state 7
    OP_DUPL    shift, and go to state 8
    OP_STASH   shift, and go to state 9
    OP_ADD     shift, and go to state 10
    OP_JUMP    shift, and go to state 11
    OP_BREAK   shift, and go to state 12
    OP_PRINT   shift, and go to state 13
    OP_SCAN    shift, and go to state 14
    OP_EXIT    shift, and go to state 15

    $default  reduce using rule 3 (line_list)

    line_list    go to state 33
    line         go to state 18
    instruction  go to state 19


State 19

    4 line: instruction . NEW_LINE

    NEW_LINE  shift, and go to state 34


State 20

    6 instruction: OP_BUFFER OPERAND .

    $default  reduce using rule 6 (instruction)


State 21

    7 instruction: OP_TAG OPERAND .

    $default  reduce using rule 7 (instruction)


State 22

    8 instruction: OP_OPEN OPERAND .

    $default  reduce using rule 8 (instruction)


State 23

    9 instruction: OP_CLOSE OPERAND .

    $default  reduce using rule 9 (instruction)


State 24

   10 instruction: OP_POP OPERAND . OPERAND

    OPERAND  shift, and go to state 35


State 25

   11 instruction: OP_PUSH OPERAND . OPERAND

    OPERAND  shift, and go to state 36


State 26

   12 instruction: OP_DUPL OPERAND . OPERAND

    OPERAND  shift, and go to state 37


State 27

   13 instruction: OP_STASH OPERAND . OPERAND

    OPERAND  shift, and go to state 38


State 28

   14 instruction: OP_ADD OPERAND . OPERAND

    OPERAND  shift, and go to state 39


State 29

   15 instruction: OP_JUMP OPERAND . OPERAND

    OPERAND  shift, and go to state 40


State 30

   17 instruction: OP_PRINT OPERAND .

    $default  reduce using rule 17 (instruction)


State 31

   18 instruction: OP_SCAN OPERAND .

    $default  reduce using rule 18 (instruction)


State 32

    0 $accept: assembly $end .

    $default  accept


State 33

    2 line_list: line line_list .

    $default  reduce using rule 2 (line_list)


State 34

    4 line: instruction NEW_LINE .

    $default  reduce using rule 4 (line)


State 35

   10 instruction: OP_POP OPERAND OPERAND .

    $default  reduce using rule 10 (instruction)


State 36

   11 instruction: OP_PUSH OPERAND OPERAND .

    $default  reduce using rule 11 (instruction)


State 37

   12 instruction: OP_DUPL OPERAND OPERAND .

    $default  reduce using rule 12 (instruction)


State 38

   13 instruction: OP_STASH OPERAND OPERAND .

    $default  reduce using rule 13 (instruction)


State 39

   14 instruction: OP_ADD OPERAND OPERAND .

    $default  reduce using rule 14 (instruction)


State 40

   15 instruction: OP_JUMP OPERAND OPERAND .

    $default  reduce using rule 15 (instruction)
